// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_latency_0_0_0_s (
        ap_clk,
        ap_rst,
        data_2_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_10_V_read,
        data_12_V_read,
        data_13_V_read,
        data_14_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [6:0] data_2_V_read;
input  [6:0] data_4_V_read;
input  [6:0] data_5_V_read;
input  [6:0] data_6_V_read;
input  [6:0] data_7_V_read;
input  [6:0] data_8_V_read;
input  [6:0] data_10_V_read;
input  [6:0] data_12_V_read;
input  [6:0] data_13_V_read;
input  [6:0] data_14_V_read;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
input   ap_ce;

reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;
reg[7:0] ap_return_3;

reg   [6:0] data_8_V_read_1_reg_3091;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [6:0] data_7_V_read_1_reg_3098;
reg   [1:0] trunc_ln708_1_reg_3104;
reg   [1:0] trunc_ln708_2_reg_3109;
reg   [1:0] tmp_s_reg_3114;
wire   [10:0] sub_ln1118_5_fu_2363_p2;
reg   [10:0] sub_ln1118_5_reg_3119;
reg   [1:0] trunc_ln708_5_reg_3124;
reg   [2:0] trunc_ln2_reg_3129;
reg   [2:0] trunc_ln703_1_reg_3134;
reg   [2:0] trunc_ln703_3_reg_3139;
reg   [2:0] trunc_ln703_4_reg_3144;
reg   [1:0] tmp_86_reg_3149;
reg   [2:0] trunc_ln703_6_reg_3154;
reg   [2:0] trunc_ln703_7_reg_3159;
reg   [2:0] trunc_ln703_8_reg_3164;
reg   [2:0] trunc_ln703_9_reg_3169;
reg   [2:0] trunc_ln703_10_reg_3174;
reg   [2:0] trunc_ln703_11_reg_3179;
reg   [2:0] trunc_ln703_17_reg_3184;
reg   [0:0] tmp_6_reg_3189;
reg   [2:0] trunc_ln703_19_reg_3194;
reg   [2:0] trunc_ln703_19_reg_3194_pp0_iter1_reg;
reg   [2:0] trunc_ln703_20_reg_3199;
reg   [0:0] tmp_7_reg_3204;
reg   [1:0] tmp_87_reg_3209;
reg   [2:0] trunc_ln703_23_reg_3214;
reg   [2:0] trunc_ln703_23_reg_3214_pp0_iter1_reg;
reg   [2:0] trunc_ln703_24_reg_3219;
reg   [2:0] trunc_ln3_reg_3224;
wire   [2:0] add_ln731_fu_2719_p2;
reg   [2:0] add_ln731_reg_3229;
reg   [2:0] trunc_ln731_1_reg_3234;
reg   [2:0] trunc_ln703_13_reg_3239;
reg   [2:0] trunc_ln703_14_reg_3244;
reg   [2:0] trunc_ln703_15_reg_3249;
wire   [2:0] add_ln731_6_fu_2890_p2;
reg   [2:0] add_ln731_6_reg_3254;
wire   [2:0] add_ln731_7_fu_2895_p2;
reg   [2:0] add_ln731_7_reg_3259;
wire   [2:0] add_ln731_9_fu_2906_p2;
reg   [2:0] add_ln731_9_reg_3264;
wire   [2:0] add_ln731_14_fu_2927_p2;
reg   [2:0] add_ln731_14_reg_3269;
wire   [2:0] add_ln731_17_fu_2938_p2;
reg   [2:0] add_ln731_17_reg_3274;
wire   [2:0] add_ln731_21_fu_2953_p2;
reg   [2:0] add_ln731_21_reg_3279;
wire   [2:0] add_ln731_26_fu_2967_p2;
reg   [2:0] add_ln731_26_reg_3284;
wire   [2:0] add_ln731_27_fu_2973_p2;
reg   [2:0] add_ln731_27_reg_3289;
wire   [2:0] add_ln731_29_fu_2984_p2;
reg   [2:0] add_ln731_29_reg_3294;
wire   [6:0] mul_ln1118_10_fu_194_p1;
wire   [13:0] zext_ln1118_13_fu_2761_p1;
wire    ap_block_pp0_stage0;
wire   [6:0] mul_ln1118_14_fu_197_p1;
wire   [13:0] zext_ln1118_25_fu_2494_p1;
wire   [6:0] mul_ln1118_12_fu_198_p1;
wire   [6:0] mul_ln1118_4_fu_199_p1;
wire   [13:0] zext_ln1118_8_fu_2279_p1;
wire   [6:0] mul_ln1118_6_fu_201_p1;
wire   [13:0] zext_ln1118_11_fu_2334_p1;
wire   [6:0] mul_ln1118_7_fu_203_p1;
wire   [6:0] mul_ln1118_fu_207_p1;
wire   [6:0] mul_ln1118_1_fu_208_p1;
wire   [13:0] zext_ln1118_7_fu_2249_p1;
wire   [6:0] mul_ln1118_9_fu_209_p1;
wire   [13:0] zext_ln1118_12_fu_2744_p1;
wire   [6:0] mul_ln1118_13_fu_210_p1;
wire   [6:0] mul_ln1118_8_fu_214_p1;
wire   [6:0] mul_ln1118_11_fu_216_p1;
wire   [6:0] mul_ln1118_2_fu_221_p1;
wire   [6:0] mul_ln1118_3_fu_223_p1;
wire   [9:0] shl_ln_fu_2140_p3;
wire   [10:0] zext_ln1118_1_fu_2148_p1;
wire   [10:0] sub_ln1118_fu_2152_p2;
wire   [0:0] tmp_4_fu_2158_p3;
wire   [11:0] shl_ln1118_1_fu_2174_p3;
wire   [7:0] shl_ln1118_2_fu_2186_p3;
wire   [12:0] zext_ln1118_3_fu_2194_p1;
wire   [12:0] zext_ln1118_2_fu_2182_p1;
wire   [12:0] sub_ln1118_1_fu_2198_p2;
wire   [12:0] shl_ln1118_3_fu_2214_p3;
wire   [10:0] shl_ln1118_4_fu_2226_p3;
wire   [13:0] zext_ln1118_5_fu_2234_p1;
wire   [13:0] zext_ln1118_4_fu_2222_p1;
wire   [13:0] shl_ln1118_5_fu_2255_p3;
wire   [12:0] mul_ln1118_2_fu_221_p2;
wire   [11:0] shl_ln1118_6_fu_2284_p3;
wire   [7:0] shl_ln1118_7_fu_2296_p3;
wire   [12:0] zext_ln1118_10_fu_2304_p1;
wire   [12:0] zext_ln1118_9_fu_2292_p1;
wire   [13:0] p_shl_fu_2314_p3;
wire   [9:0] shl_ln1118_10_fu_2351_p3;
wire   [10:0] zext_ln1118_14_fu_2359_p1;
wire   [12:0] shl_ln1118_13_fu_2374_p3;
wire   [8:0] shl_ln1118_14_fu_2386_p3;
wire   [13:0] zext_ln1118_17_fu_2382_p1;
wire   [13:0] zext_ln1118_18_fu_2394_p1;
wire   [12:0] mul_ln1118_11_fu_216_p2;
wire   [10:0] shl_ln1118_15_fu_2422_p3;
wire   [11:0] zext_ln1118_19_fu_2414_p1;
wire   [11:0] zext_ln1118_21_fu_2430_p1;
wire   [13:0] shl_ln1118_16_fu_2440_p3;
wire   [13:0] zext_ln1118_20_fu_2418_p1;
wire   [13:0] shl_ln1118_17_fu_2474_p3;
wire   [13:0] zext_ln1118_23_fu_2465_p1;
wire   [13:0] shl_ln1118_18_fu_2499_p3;
wire   [13:0] add_ln1118_fu_2238_p2;
wire   [13:0] mul_ln1118_fu_207_p2;
wire   [13:0] sub_ln1118_2_fu_2263_p2;
wire   [13:0] mul_ln1118_1_fu_208_p2;
wire   [13:0] mul_ln1118_3_fu_223_p2;
wire   [12:0] add_ln1118_1_fu_2308_p2;
wire   [13:0] mul_ln1118_4_fu_199_p2;
wire   [13:0] sub_ln1118_128_fu_2322_p2;
wire   [13:0] sub_ln1118_3_fu_2328_p2;
wire   [13:0] mul_ln1118_6_fu_201_p2;
wire   [13:0] mul_ln1118_7_fu_203_p2;
wire   [13:0] mul_ln1118_8_fu_214_p2;
wire   [13:0] sub_ln1118_9_fu_2398_p2;
wire   [11:0] add_ln1118_2_fu_2434_p2;
wire   [13:0] sub_ln1118_10_fu_2448_p2;
wire   [13:0] sub_ln1118_11_fu_2454_p2;
wire   [11:0] mul_ln1118_12_fu_198_p2;
wire   [12:0] mul_ln1118_13_fu_210_p2;
wire   [13:0] sub_ln1118_12_fu_2482_p2;
wire   [13:0] sub_ln1118_13_fu_2488_p2;
wire   [13:0] sub_ln1118_14_fu_2507_p2;
wire   [2:0] select_ln708_fu_2166_p3;
wire   [2:0] trunc_ln703_2_fu_2533_p4;
wire   [13:0] mul_ln1118_14_fu_197_p2;
wire   [13:0] shl_ln1118_9_fu_2748_p3;
wire   [7:0] shl_ln1118_11_fu_2768_p3;
wire  signed [11:0] sext_ln1118_fu_2765_p1;
wire   [11:0] zext_ln1118_15_fu_2775_p1;
wire   [11:0] sub_ln1118_6_fu_2779_p2;
wire   [0:0] tmp_5_fu_2785_p3;
wire   [13:0] shl_ln1118_12_fu_2801_p3;
wire   [13:0] sub_ln1118_4_fu_2755_p2;
wire   [13:0] mul_ln1118_9_fu_209_p2;
wire   [13:0] sub_ln1118_7_fu_2808_p2;
wire   [13:0] mul_ln1118_10_fu_194_p2;
wire   [13:0] sub_ln1118_8_fu_2814_p2;
wire   [2:0] zext_ln703_fu_2823_p1;
wire   [2:0] add_ln731_2_fu_2885_p2;
wire   [2:0] select_ln708_1_fu_2793_p3;
wire   [2:0] trunc_ln703_12_fu_2826_p4;
wire   [2:0] zext_ln703_2_fu_2879_p1;
wire   [2:0] add_ln731_8_fu_2901_p2;
wire  signed [2:0] sext_ln708_fu_2735_p1;
wire   [2:0] zext_ln708_fu_2741_p1;
wire   [2:0] add_ln731_12_fu_2917_p2;
wire   [2:0] add_ln731_11_fu_2911_p2;
wire   [2:0] add_ln731_13_fu_2922_p2;
wire   [2:0] zext_ln703_3_fu_2882_p1;
wire   [2:0] zext_ln703_1_fu_2876_p1;
wire   [2:0] add_ln731_16_fu_2933_p2;
wire  signed [2:0] sext_ln708_1_fu_2738_p1;
wire   [2:0] add_ln731_19_fu_2944_p2;
wire   [2:0] add_ln731_20_fu_2949_p2;
wire   [2:0] add_ln731_24_fu_2959_p2;
wire   [2:0] add_ln731_25_fu_2963_p2;
wire  signed [2:0] sext_ln708_2_fu_2820_p1;
wire   [2:0] trunc_ln703_16_fu_2866_p4;
wire   [2:0] add_ln731_28_fu_2979_p2;
wire   [2:0] add_ln731_10_fu_2989_p2;
wire   [2:0] add_ln731_1_fu_2993_p2;
wire   [2:0] add_ln731_15_fu_3006_p2;
wire   [2:0] add_ln731_18_fu_3010_p2;
wire   [2:0] add_ln731_3_fu_3015_p2;
wire   [2:0] add_ln731_22_fu_3028_p2;
wire   [2:0] add_ln731_23_fu_3032_p2;
wire   [2:0] add_ln731_4_fu_3037_p2;
wire   [2:0] add_ln731_30_fu_3050_p2;
wire   [2:0] add_ln731_5_fu_3054_p2;
wire   [7:0] res_0_V_write_assig_fu_2998_p3;
wire   [7:0] res_1_V_write_assig_fu_3020_p3;
wire   [7:0] res_2_V_write_assig_fu_3042_p3;
wire   [7:0] res_3_V_write_assig_fu_3059_p3;
reg    ap_ce_reg;
reg   [6:0] data_2_V_read_int_reg;
reg   [6:0] data_4_V_read_int_reg;
reg   [6:0] data_5_V_read_int_reg;
reg   [6:0] data_6_V_read_int_reg;
reg   [6:0] data_7_V_read_int_reg;
reg   [6:0] data_8_V_read_int_reg;
reg   [6:0] data_10_V_read_int_reg;
reg   [6:0] data_12_V_read_int_reg;
reg   [6:0] data_13_V_read_int_reg;
reg   [6:0] data_14_V_read_int_reg;
reg   [7:0] ap_return_0_int_reg;
reg   [7:0] ap_return_1_int_reg;
reg   [7:0] ap_return_2_int_reg;
reg   [7:0] ap_return_3_int_reg;
wire   [12:0] mul_ln1118_11_fu_216_p10;
wire   [11:0] mul_ln1118_12_fu_198_p10;
wire   [12:0] mul_ln1118_13_fu_210_p10;
wire   [12:0] mul_ln1118_2_fu_221_p10;
wire   [13:0] mul_ln1118_fu_207_p10;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln731_14_reg_3269 <= add_ln731_14_fu_2927_p2;
        add_ln731_17_reg_3274 <= add_ln731_17_fu_2938_p2;
        add_ln731_21_reg_3279 <= add_ln731_21_fu_2953_p2;
        add_ln731_26_reg_3284 <= add_ln731_26_fu_2967_p2;
        add_ln731_27_reg_3289 <= add_ln731_27_fu_2973_p2;
        add_ln731_29_reg_3294 <= add_ln731_29_fu_2984_p2;
        add_ln731_6_reg_3254 <= add_ln731_6_fu_2890_p2;
        add_ln731_7_reg_3259 <= add_ln731_7_fu_2895_p2;
        add_ln731_9_reg_3264 <= add_ln731_9_fu_2906_p2;
        add_ln731_reg_3229 <= add_ln731_fu_2719_p2;
        data_7_V_read_1_reg_3098 <= data_7_V_read_int_reg;
        data_8_V_read_1_reg_3091 <= data_8_V_read_int_reg;
        sub_ln1118_5_reg_3119[10 : 3] <= sub_ln1118_5_fu_2363_p2[10 : 3];
        tmp_6_reg_3189 <= add_ln1118_2_fu_2434_p2[32'd11];
        tmp_7_reg_3204 <= mul_ln1118_12_fu_198_p2[32'd11];
        tmp_86_reg_3149 <= {{add_ln1118_1_fu_2308_p2[12:11]}};
        tmp_87_reg_3209 <= {{mul_ln1118_13_fu_210_p2[12:11]}};
        tmp_s_reg_3114 <= {{data_6_V_read_int_reg[6:5]}};
        trunc_ln2_reg_3129 <= {{add_ln1118_fu_2238_p2[13:11]}};
        trunc_ln3_reg_3224 <= {{sub_ln1118_14_fu_2507_p2[13:11]}};
        trunc_ln703_10_reg_3174 <= {{mul_ln1118_7_fu_203_p2[13:11]}};
        trunc_ln703_11_reg_3179 <= {{mul_ln1118_8_fu_214_p2[13:11]}};
        trunc_ln703_13_reg_3239 <= {{mul_ln1118_9_fu_209_p2[13:11]}};
        trunc_ln703_14_reg_3244 <= {{sub_ln1118_7_fu_2808_p2[13:11]}};
        trunc_ln703_15_reg_3249 <= {{mul_ln1118_10_fu_194_p2[13:11]}};
        trunc_ln703_17_reg_3184 <= {{sub_ln1118_9_fu_2398_p2[13:11]}};
        trunc_ln703_19_reg_3194 <= {{sub_ln1118_10_fu_2448_p2[13:11]}};
        trunc_ln703_19_reg_3194_pp0_iter1_reg <= trunc_ln703_19_reg_3194;
        trunc_ln703_1_reg_3134 <= {{mul_ln1118_fu_207_p2[13:11]}};
        trunc_ln703_20_reg_3199 <= {{sub_ln1118_11_fu_2454_p2[13:11]}};
        trunc_ln703_23_reg_3214 <= {{sub_ln1118_12_fu_2482_p2[13:11]}};
        trunc_ln703_23_reg_3214_pp0_iter1_reg <= trunc_ln703_23_reg_3214;
        trunc_ln703_24_reg_3219 <= {{sub_ln1118_13_fu_2488_p2[13:11]}};
        trunc_ln703_3_reg_3139 <= {{mul_ln1118_1_fu_208_p2[13:11]}};
        trunc_ln703_4_reg_3144 <= {{mul_ln1118_3_fu_223_p2[13:11]}};
        trunc_ln703_6_reg_3154 <= {{mul_ln1118_4_fu_199_p2[13:11]}};
        trunc_ln703_7_reg_3159 <= {{sub_ln1118_128_fu_2322_p2[13:11]}};
        trunc_ln703_8_reg_3164 <= {{sub_ln1118_3_fu_2328_p2[13:11]}};
        trunc_ln703_9_reg_3169 <= {{mul_ln1118_6_fu_201_p2[13:11]}};
        trunc_ln708_1_reg_3104 <= {{sub_ln1118_1_fu_2198_p2[12:11]}};
        trunc_ln708_2_reg_3109 <= {{mul_ln1118_2_fu_221_p2[12:11]}};
        trunc_ln708_5_reg_3124 <= {{mul_ln1118_11_fu_216_p2[12:11]}};
        trunc_ln731_1_reg_3234 <= {{mul_ln1118_14_fu_197_p2[13:11]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg[7 : 5] <= res_0_V_write_assig_fu_2998_p3[7 : 5];
        ap_return_1_int_reg[7 : 5] <= res_1_V_write_assig_fu_3020_p3[7 : 5];
        ap_return_2_int_reg[7 : 5] <= res_2_V_write_assig_fu_3042_p3[7 : 5];
        ap_return_3_int_reg[7 : 5] <= res_3_V_write_assig_fu_3059_p3[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        data_10_V_read_int_reg <= data_10_V_read;
        data_12_V_read_int_reg <= data_12_V_read;
        data_13_V_read_int_reg <= data_13_V_read;
        data_14_V_read_int_reg <= data_14_V_read;
        data_2_V_read_int_reg <= data_2_V_read;
        data_4_V_read_int_reg <= data_4_V_read;
        data_5_V_read_int_reg <= data_5_V_read;
        data_6_V_read_int_reg <= data_6_V_read;
        data_7_V_read_int_reg <= data_7_V_read;
        data_8_V_read_int_reg <= data_8_V_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = res_0_V_write_assig_fu_2998_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = res_1_V_write_assig_fu_3020_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = res_2_V_write_assig_fu_3042_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = res_3_V_write_assig_fu_3059_p3;
    end
end

assign add_ln1118_1_fu_2308_p2 = (zext_ln1118_10_fu_2304_p1 + zext_ln1118_9_fu_2292_p1);

assign add_ln1118_2_fu_2434_p2 = (zext_ln1118_19_fu_2414_p1 + zext_ln1118_21_fu_2430_p1);

assign add_ln1118_fu_2238_p2 = (zext_ln1118_5_fu_2234_p1 + zext_ln1118_4_fu_2222_p1);

assign add_ln731_10_fu_2989_p2 = (add_ln731_7_reg_3259 + add_ln731_9_reg_3264);

assign add_ln731_11_fu_2911_p2 = ($signed(3'd6) + $signed(sext_ln708_fu_2735_p1));

assign add_ln731_12_fu_2917_p2 = (zext_ln708_fu_2741_p1 + trunc_ln703_6_reg_3154);

assign add_ln731_13_fu_2922_p2 = (trunc_ln703_3_reg_3139 + add_ln731_12_fu_2917_p2);

assign add_ln731_14_fu_2927_p2 = (add_ln731_11_fu_2911_p2 + add_ln731_13_fu_2922_p2);

assign add_ln731_15_fu_3006_p2 = (trunc_ln703_14_reg_3244 + trunc_ln703_13_reg_3239);

assign add_ln731_16_fu_2933_p2 = (trunc_ln731_1_reg_3234 + zext_ln703_3_fu_2882_p1);

assign add_ln731_17_fu_2938_p2 = (zext_ln703_1_fu_2876_p1 + add_ln731_16_fu_2933_p2);

assign add_ln731_18_fu_3010_p2 = (add_ln731_15_fu_3006_p2 + add_ln731_17_reg_3274);

assign add_ln731_19_fu_2944_p2 = ($signed(trunc_ln2_reg_3129) + $signed(sext_ln708_1_fu_2738_p1));

assign add_ln731_1_fu_2993_p2 = (add_ln731_6_reg_3254 + add_ln731_10_fu_2989_p2);

assign add_ln731_20_fu_2949_p2 = (trunc_ln703_10_reg_3174 + trunc_ln703_7_reg_3159);

assign add_ln731_21_fu_2953_p2 = (add_ln731_19_fu_2944_p2 + add_ln731_20_fu_2949_p2);

assign add_ln731_22_fu_3028_p2 = (trunc_ln703_19_reg_3194_pp0_iter1_reg + trunc_ln703_15_reg_3249);

assign add_ln731_23_fu_3032_p2 = (add_ln731_22_fu_3028_p2 + trunc_ln703_23_reg_3214_pp0_iter1_reg);

assign add_ln731_24_fu_2959_p2 = (trunc_ln703_4_reg_3144 + trunc_ln703_1_reg_3134);

assign add_ln731_25_fu_2963_p2 = (trunc_ln703_11_reg_3179 + trunc_ln703_8_reg_3164);

assign add_ln731_26_fu_2967_p2 = (add_ln731_24_fu_2959_p2 + add_ln731_25_fu_2963_p2);

assign add_ln731_27_fu_2973_p2 = ($signed(sext_ln708_2_fu_2820_p1) + $signed(trunc_ln703_16_fu_2866_p4));

assign add_ln731_28_fu_2979_p2 = (3'd1 + trunc_ln703_24_reg_3219);

assign add_ln731_29_fu_2984_p2 = (trunc_ln703_20_reg_3199 + add_ln731_28_fu_2979_p2);

assign add_ln731_2_fu_2885_p2 = (trunc_ln703_9_reg_3169 + zext_ln703_fu_2823_p1);

assign add_ln731_30_fu_3050_p2 = (add_ln731_27_reg_3289 + add_ln731_29_reg_3294);

assign add_ln731_3_fu_3015_p2 = (add_ln731_14_reg_3269 + add_ln731_18_fu_3010_p2);

assign add_ln731_4_fu_3037_p2 = (add_ln731_21_reg_3279 + add_ln731_23_fu_3032_p2);

assign add_ln731_5_fu_3054_p2 = (add_ln731_26_reg_3284 + add_ln731_30_fu_3050_p2);

assign add_ln731_6_fu_2890_p2 = (add_ln731_reg_3229 + add_ln731_2_fu_2885_p2);

assign add_ln731_7_fu_2895_p2 = (select_ln708_1_fu_2793_p3 + trunc_ln703_12_fu_2826_p4);

assign add_ln731_8_fu_2901_p2 = (trunc_ln3_reg_3224 + zext_ln703_2_fu_2879_p1);

assign add_ln731_9_fu_2906_p2 = (trunc_ln703_17_reg_3184 + add_ln731_8_fu_2901_p2);

assign add_ln731_fu_2719_p2 = (select_ln708_fu_2166_p3 + trunc_ln703_2_fu_2533_p4);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign mul_ln1118_10_fu_194_p1 = zext_ln1118_13_fu_2761_p1;

assign mul_ln1118_10_fu_194_p2 = (14'd105 * mul_ln1118_10_fu_194_p1);

assign mul_ln1118_11_fu_216_p1 = mul_ln1118_11_fu_216_p10;

assign mul_ln1118_11_fu_216_p10 = data_10_V_read_int_reg;

assign mul_ln1118_11_fu_216_p2 = ($signed(13'd8170) * $signed({{1'b0}, {mul_ln1118_11_fu_216_p1}}));

assign mul_ln1118_12_fu_198_p1 = mul_ln1118_12_fu_198_p10;

assign mul_ln1118_12_fu_198_p10 = data_13_V_read_int_reg;

assign mul_ln1118_12_fu_198_p2 = (12'd27 * mul_ln1118_12_fu_198_p1);

assign mul_ln1118_13_fu_210_p1 = mul_ln1118_13_fu_210_p10;

assign mul_ln1118_13_fu_210_p10 = data_13_V_read_int_reg;

assign mul_ln1118_13_fu_210_p2 = (13'd43 * mul_ln1118_13_fu_210_p1);

assign mul_ln1118_14_fu_197_p1 = zext_ln1118_25_fu_2494_p1;

assign mul_ln1118_14_fu_197_p2 = ($signed(14'd16311) * $signed({{1'b0}, {mul_ln1118_14_fu_197_p1}}));

assign mul_ln1118_1_fu_208_p1 = zext_ln1118_7_fu_2249_p1;

assign mul_ln1118_1_fu_208_p2 = (14'd106 * mul_ln1118_1_fu_208_p1);

assign mul_ln1118_2_fu_221_p1 = mul_ln1118_2_fu_221_p10;

assign mul_ln1118_2_fu_221_p10 = data_4_V_read_int_reg;

assign mul_ln1118_2_fu_221_p2 = ($signed(13'd8166) * $signed({{1'b0}, {mul_ln1118_2_fu_221_p1}}));

assign mul_ln1118_3_fu_223_p1 = zext_ln1118_7_fu_2249_p1;

assign mul_ln1118_3_fu_223_p2 = (14'd109 * mul_ln1118_3_fu_223_p1);

assign mul_ln1118_4_fu_199_p1 = zext_ln1118_8_fu_2279_p1;

assign mul_ln1118_4_fu_199_p2 = (14'd125 * mul_ln1118_4_fu_199_p1);

assign mul_ln1118_6_fu_201_p1 = zext_ln1118_11_fu_2334_p1;

assign mul_ln1118_6_fu_201_p2 = ($signed(14'd16330) * $signed({{1'b0}, {mul_ln1118_6_fu_201_p1}}));

assign mul_ln1118_7_fu_203_p1 = zext_ln1118_11_fu_2334_p1;

assign mul_ln1118_7_fu_203_p2 = (14'd74 * mul_ln1118_7_fu_203_p1);

assign mul_ln1118_8_fu_214_p1 = zext_ln1118_11_fu_2334_p1;

assign mul_ln1118_8_fu_214_p2 = ($signed(14'd16323) * $signed({{1'b0}, {mul_ln1118_8_fu_214_p1}}));

assign mul_ln1118_9_fu_209_p1 = zext_ln1118_12_fu_2744_p1;

assign mul_ln1118_9_fu_209_p2 = ($signed(14'd16331) * $signed({{1'b0}, {mul_ln1118_9_fu_209_p1}}));

assign mul_ln1118_fu_207_p1 = mul_ln1118_fu_207_p10;

assign mul_ln1118_fu_207_p10 = data_2_V_read_int_reg;

assign mul_ln1118_fu_207_p2 = (14'd73 * mul_ln1118_fu_207_p1);

assign p_shl_fu_2314_p3 = {{data_5_V_read_int_reg}, {7'd0}};

assign res_0_V_write_assig_fu_2998_p3 = {{add_ln731_1_fu_2993_p2}, {5'd0}};

assign res_1_V_write_assig_fu_3020_p3 = {{add_ln731_3_fu_3015_p2}, {5'd0}};

assign res_2_V_write_assig_fu_3042_p3 = {{add_ln731_4_fu_3037_p2}, {5'd0}};

assign res_3_V_write_assig_fu_3059_p3 = {{add_ln731_5_fu_3054_p2}, {5'd0}};

assign select_ln708_1_fu_2793_p3 = ((tmp_5_fu_2785_p3[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign select_ln708_fu_2166_p3 = ((tmp_4_fu_2158_p3[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign sext_ln1118_fu_2765_p1 = $signed(sub_ln1118_5_reg_3119);

assign sext_ln708_1_fu_2738_p1 = $signed(trunc_ln708_2_reg_3109);

assign sext_ln708_2_fu_2820_p1 = $signed(trunc_ln708_5_reg_3124);

assign sext_ln708_fu_2735_p1 = $signed(trunc_ln708_1_reg_3104);

assign shl_ln1118_10_fu_2351_p3 = {{data_8_V_read_int_reg}, {3'd0}};

assign shl_ln1118_11_fu_2768_p3 = {{data_8_V_read_1_reg_3091}, {1'd0}};

assign shl_ln1118_12_fu_2801_p3 = {{data_8_V_read_1_reg_3091}, {7'd0}};

assign shl_ln1118_13_fu_2374_p3 = {{data_10_V_read_int_reg}, {6'd0}};

assign shl_ln1118_14_fu_2386_p3 = {{data_10_V_read_int_reg}, {2'd0}};

assign shl_ln1118_15_fu_2422_p3 = {{data_12_V_read_int_reg}, {4'd0}};

assign shl_ln1118_16_fu_2440_p3 = {{data_12_V_read_int_reg}, {7'd0}};

assign shl_ln1118_17_fu_2474_p3 = {{data_13_V_read_int_reg}, {7'd0}};

assign shl_ln1118_18_fu_2499_p3 = {{data_14_V_read_int_reg}, {7'd0}};

assign shl_ln1118_1_fu_2174_p3 = {{data_2_V_read_int_reg}, {5'd0}};

assign shl_ln1118_2_fu_2186_p3 = {{data_2_V_read_int_reg}, {1'd0}};

assign shl_ln1118_3_fu_2214_p3 = {{data_2_V_read_int_reg}, {6'd0}};

assign shl_ln1118_4_fu_2226_p3 = {{data_2_V_read_int_reg}, {4'd0}};

assign shl_ln1118_5_fu_2255_p3 = {{data_4_V_read_int_reg}, {7'd0}};

assign shl_ln1118_6_fu_2284_p3 = {{data_5_V_read_int_reg}, {5'd0}};

assign shl_ln1118_7_fu_2296_p3 = {{data_5_V_read_int_reg}, {1'd0}};

assign shl_ln1118_9_fu_2748_p3 = {{data_7_V_read_1_reg_3098}, {7'd0}};

assign shl_ln_fu_2140_p3 = {{data_2_V_read_int_reg}, {3'd0}};

assign sub_ln1118_10_fu_2448_p2 = (shl_ln1118_16_fu_2440_p3 - zext_ln1118_20_fu_2418_p1);

assign sub_ln1118_11_fu_2454_p2 = (14'd0 - shl_ln1118_16_fu_2440_p3);

assign sub_ln1118_128_fu_2322_p2 = (zext_ln1118_8_fu_2279_p1 - p_shl_fu_2314_p3);

assign sub_ln1118_12_fu_2482_p2 = (14'd0 - shl_ln1118_17_fu_2474_p3);

assign sub_ln1118_13_fu_2488_p2 = (shl_ln1118_17_fu_2474_p3 - zext_ln1118_23_fu_2465_p1);

assign sub_ln1118_14_fu_2507_p2 = (shl_ln1118_18_fu_2499_p3 - zext_ln1118_25_fu_2494_p1);

assign sub_ln1118_1_fu_2198_p2 = (zext_ln1118_3_fu_2194_p1 - zext_ln1118_2_fu_2182_p1);

assign sub_ln1118_2_fu_2263_p2 = (14'd0 - shl_ln1118_5_fu_2255_p3);

assign sub_ln1118_3_fu_2328_p2 = (14'd0 - p_shl_fu_2314_p3);

assign sub_ln1118_4_fu_2755_p2 = (shl_ln1118_9_fu_2748_p3 - zext_ln1118_12_fu_2744_p1);

assign sub_ln1118_5_fu_2363_p2 = (11'd0 - zext_ln1118_14_fu_2359_p1);

assign sub_ln1118_6_fu_2779_p2 = ($signed(sext_ln1118_fu_2765_p1) - $signed(zext_ln1118_15_fu_2775_p1));

assign sub_ln1118_7_fu_2808_p2 = (14'd0 - shl_ln1118_12_fu_2801_p3);

assign sub_ln1118_8_fu_2814_p2 = (shl_ln1118_12_fu_2801_p3 - zext_ln1118_13_fu_2761_p1);

assign sub_ln1118_9_fu_2398_p2 = (zext_ln1118_17_fu_2382_p1 - zext_ln1118_18_fu_2394_p1);

assign sub_ln1118_fu_2152_p2 = (11'd0 - zext_ln1118_1_fu_2148_p1);

assign tmp_4_fu_2158_p3 = sub_ln1118_fu_2152_p2[32'd10];

assign tmp_5_fu_2785_p3 = sub_ln1118_6_fu_2779_p2[32'd11];

assign trunc_ln703_12_fu_2826_p4 = {{sub_ln1118_4_fu_2755_p2[13:11]}};

assign trunc_ln703_16_fu_2866_p4 = {{sub_ln1118_8_fu_2814_p2[13:11]}};

assign trunc_ln703_2_fu_2533_p4 = {{sub_ln1118_2_fu_2263_p2[13:11]}};

assign zext_ln1118_10_fu_2304_p1 = shl_ln1118_7_fu_2296_p3;

assign zext_ln1118_11_fu_2334_p1 = data_6_V_read_int_reg;

assign zext_ln1118_12_fu_2744_p1 = data_7_V_read_1_reg_3098;

assign zext_ln1118_13_fu_2761_p1 = data_8_V_read_1_reg_3091;

assign zext_ln1118_14_fu_2359_p1 = shl_ln1118_10_fu_2351_p3;

assign zext_ln1118_15_fu_2775_p1 = shl_ln1118_11_fu_2768_p3;

assign zext_ln1118_17_fu_2382_p1 = shl_ln1118_13_fu_2374_p3;

assign zext_ln1118_18_fu_2394_p1 = shl_ln1118_14_fu_2386_p3;

assign zext_ln1118_19_fu_2414_p1 = data_12_V_read_int_reg;

assign zext_ln1118_1_fu_2148_p1 = shl_ln_fu_2140_p3;

assign zext_ln1118_20_fu_2418_p1 = data_12_V_read_int_reg;

assign zext_ln1118_21_fu_2430_p1 = shl_ln1118_15_fu_2422_p3;

assign zext_ln1118_23_fu_2465_p1 = data_13_V_read_int_reg;

assign zext_ln1118_25_fu_2494_p1 = data_14_V_read_int_reg;

assign zext_ln1118_2_fu_2182_p1 = shl_ln1118_1_fu_2174_p3;

assign zext_ln1118_3_fu_2194_p1 = shl_ln1118_2_fu_2186_p3;

assign zext_ln1118_4_fu_2222_p1 = shl_ln1118_3_fu_2214_p3;

assign zext_ln1118_5_fu_2234_p1 = shl_ln1118_4_fu_2226_p3;

assign zext_ln1118_7_fu_2249_p1 = data_4_V_read_int_reg;

assign zext_ln1118_8_fu_2279_p1 = data_5_V_read_int_reg;

assign zext_ln1118_9_fu_2292_p1 = shl_ln1118_6_fu_2284_p3;

assign zext_ln703_1_fu_2876_p1 = tmp_6_reg_3189;

assign zext_ln703_2_fu_2879_p1 = tmp_7_reg_3204;

assign zext_ln703_3_fu_2882_p1 = tmp_87_reg_3209;

assign zext_ln703_fu_2823_p1 = tmp_86_reg_3149;

assign zext_ln708_fu_2741_p1 = tmp_s_reg_3114;

always @ (posedge ap_clk) begin
    sub_ln1118_5_reg_3119[2:0] <= 3'b000;
    ap_return_0_int_reg[4:0] <= 5'b00000;
    ap_return_1_int_reg[4:0] <= 5'b00000;
    ap_return_2_int_reg[4:0] <= 5'b00000;
    ap_return_3_int_reg[4:0] <= 5'b00000;
end

endmodule //dense_latency_0_0_0_s
